<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cyp.gp.children.mapper.ChildrenshoesMapper" >
  <resultMap id="BaseResultMap" type="com.cyp.gp.children.dao.Childrenshoes" >
    <id column="shoesid" property="shoesid" jdbcType="VARCHAR" />
    <result column="shoesname" property="shoesname" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="shoeslevel" property="shoeslevel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    shoesid, shoesname, price, introduction, shoeslevel
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cyp.gp.children.dao.ChildrenshoesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from childrenshoes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from childrenshoes
    where shoesid = #{shoesid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from childrenshoes
    where shoesid = #{shoesid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cyp.gp.children.dao.ChildrenshoesExample" >
    delete from childrenshoes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cyp.gp.children.dao.Childrenshoes" >
    insert into childrenshoes (shoesid, shoesname, price, 
      introduction, shoeslevel)
    values (#{shoesid,jdbcType=VARCHAR}, #{shoesname,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{introduction,jdbcType=VARCHAR}, #{shoeslevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cyp.gp.children.dao.Childrenshoes" >
    insert into childrenshoes
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="shoesid != null" >
        shoesid,
      </if>
      <if test="shoesname != null" >
        shoesname,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
      <if test="shoeslevel != null" >
        shoeslevel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="shoesid != null" >
        #{shoesid,jdbcType=VARCHAR},
      </if>
      <if test="shoesname != null" >
        #{shoesname,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="shoeslevel != null" >
        #{shoeslevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cyp.gp.children.dao.ChildrenshoesExample" resultType="java.lang.Integer" >
    select count(*) from childrenshoes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update childrenshoes
    <set >
      <if test="record.shoesid != null" >
        shoesid = #{record.shoesid,jdbcType=VARCHAR},
      </if>
      <if test="record.shoesname != null" >
        shoesname = #{record.shoesname,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.shoeslevel != null" >
        shoeslevel = #{record.shoeslevel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update childrenshoes
    set shoesid = #{record.shoesid,jdbcType=VARCHAR},
      shoesname = #{record.shoesname,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      shoeslevel = #{record.shoeslevel,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cyp.gp.children.dao.Childrenshoes" >
    update childrenshoes
    <set >
      <if test="shoesname != null" >
        shoesname = #{shoesname,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="shoeslevel != null" >
        shoeslevel = #{shoeslevel,jdbcType=INTEGER},
      </if>
    </set>
    where shoesid = #{shoesid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cyp.gp.children.dao.Childrenshoes" >
    update childrenshoes
    set shoesname = #{shoesname,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      introduction = #{introduction,jdbcType=VARCHAR},
      shoeslevel = #{shoeslevel,jdbcType=INTEGER}
    where shoesid = #{shoesid,jdbcType=VARCHAR}
  </update>
  <select id="selectByPage" parameterType="int" resultType="com.cyp.gp.children.dto.ChildrenShoesDTO">
    select shoesid,price from childrenshoes limit #{page},12
  </select>
  <select id="selectToAdminByPage" parameterType="int" resultType="com.cyp.gp.children.dao.Childrenshoes">
    select * from childrenshoes limit #{page},10
  </select>
  <select id="GetChildrenShoesCounts"  resultType="int">
    select count(*) from childrenshoes
  </select>
  <select id="FuzzySerchByIndex"  parameterType="java.lang.String" resultType="com.cyp.gp.children.dao.Childrenshoes">
    select * from childrenshoes WHERE shoesid LIKE concat(concat('%',#{index}),'%')
  </select>

</mapper>